{"ast":null,"code":"import { atom, selector } from \"recoil\";\nexport let Categories;\n\n(function (Categories) {\n  Categories[\"TO_DO\"] = \"TO_DO\";\n  Categories[\"DOING\"] = \"DOING\";\n  Categories[\"DONE\"] = \"DONE\";\n})(Categories || (Categories = {}));\n\nexport const categoryState = atom({\n  key: \"category\",\n  default: Categories.TO_DO\n});\nexport const toDoState = atom({\n  key: \"toDo\",\n  default: [],\n  effects: [_ref => {\n    let {\n      setSelf,\n      onSet\n    } = _ref;\n    const todoStoreKey = \"Todo\";\n    const savedValue = localStorage.getItem(todoStoreKey);\n\n    if (savedValue != null) {\n      setSelf(JSON.parse(savedValue));\n    }\n\n    onSet((newValue, _, isReset) => {\n      isReset ? localStorage.removeItem(todoStoreKey) : localStorage.setItem(todoStoreKey, JSON.stringify(newValue));\n    });\n  }]\n});\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: _ref2 => {\n    let {\n      get\n    } = _ref2;\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});","map":{"version":3,"names":["atom","selector","Categories","categoryState","key","default","TO_DO","toDoState","effects","setSelf","onSet","todoStoreKey","savedValue","localStorage","getItem","JSON","parse","newValue","_","isReset","removeItem","setItem","stringify","toDoSelector","get","toDos","category","filter","toDo"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/Nomadcoder/react-masterClass/Todo/src/components/atoms.tsx"],"sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n  effects: [\n    ({ setSelf, onSet }) => {\n      const todoStoreKey = \"Todo\";\n      const savedValue = localStorage.getItem(todoStoreKey);\n      if (savedValue != null) {\n        setSelf(JSON.parse(savedValue));\n      }\n      onSet((newValue, _, isReset) => {\n        isReset ? localStorage.removeItem(todoStoreKey) : localStorage.setItem(todoStoreKey, JSON.stringify(newValue));\n      });\n    },\n  ],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AAEA,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAYZ,OAAO,MAAMC,aAAa,GAAGH,IAAI,CAAa;EAC5CI,GAAG,EAAE,UADuC;EAE5CC,OAAO,EAAEH,UAAU,CAACI;AAFwB,CAAb,CAA1B;AAKP,OAAO,MAAMC,SAAS,GAAGP,IAAI,CAAU;EACrCI,GAAG,EAAE,MADgC;EAErCC,OAAO,EAAE,EAF4B;EAGrCG,OAAO,EAAE,CACP,QAAwB;IAAA,IAAvB;MAAEC,OAAF;MAAWC;IAAX,CAAuB;IACtB,MAAMC,YAAY,GAAG,MAArB;IACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqBH,YAArB,CAAnB;;IACA,IAAIC,UAAU,IAAI,IAAlB,EAAwB;MACtBH,OAAO,CAACM,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAD,CAAP;IACD;;IACDF,KAAK,CAAC,CAACO,QAAD,EAAWC,CAAX,EAAcC,OAAd,KAA0B;MAC9BA,OAAO,GAAGN,YAAY,CAACO,UAAb,CAAwBT,YAAxB,CAAH,GAA2CE,YAAY,CAACQ,OAAb,CAAqBV,YAArB,EAAmCI,IAAI,CAACO,SAAL,CAAeL,QAAf,CAAnC,CAAlD;IACD,CAFI,CAAL;EAGD,CAVM;AAH4B,CAAV,CAAtB;AAiBP,OAAO,MAAMM,YAAY,GAAGtB,QAAQ,CAAC;EACnCG,GAAG,EAAE,cAD8B;EAEnCoB,GAAG,EAAE,SAAa;IAAA,IAAZ;MAAEA;IAAF,CAAY;IAChB,MAAMC,KAAK,GAAGD,GAAG,CAACjB,SAAD,CAAjB;IACA,MAAMmB,QAAQ,GAAGF,GAAG,CAACrB,aAAD,CAApB;IACA,OAAOsB,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBA,QAAzC,CAAP;EACD;AANkC,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}