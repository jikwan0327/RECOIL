{"ast":null,"code":"var _jsxFileName = \"/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Price(_ref) {\n  _s();\n\n  var _data$map;\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"prices\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Price...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      series: [{\n        data: [{\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        }, {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        }, {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        }, {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        }, {\n          x: new Date(1538794800000),\n          y: [6604.5, 6614.4, 6602.26, 6608.02]\n        }, {\n          x: new Date(1538796600000),\n          y: [6608.02, 6610.68, 6601.99, 6608.91]\n        }, {\n          x: new Date(1538798400000),\n          y: [6608.91, 6618.99, 6608.01, 6612]\n        }, {\n          x: new Date(1538800200000),\n          y: [6612, 6615.13, 6605.09, 6612]\n        }, {\n          x: new Date(1538802000000),\n          y: [6612, 6624.12, 6608.43, 6622.95]\n        }, {\n          x: new Date(1538803800000),\n          y: [6623.91, 6623.91, 6615, 6615.67]\n        }, {\n          x: new Date(1538805600000),\n          y: [6618.69, 6618.74, 6610, 6610.4]\n        }, {\n          x: new Date(1538807400000),\n          y: [6611, 6622.78, 6610.4, 6614.9]\n        }, {\n          x: new Date(1538809200000),\n          y: [6614.9, 6626.2, 6613.33, 6623.45]\n        }]\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false,\n            datetimeFormatter: {\n              month: \"mmm 'yy\"\n            }\n          },\n          type: \"datetime\",\n          categories: (_data$map = data === null || data === void 0 ? void 0 : data.map(price => price.time_close * 1000)) !== null && _data$map !== void 0 ? _data$map : []\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"#0be881\"],\n            stops: [0, 100]\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Price, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Price;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","Price","coinId","isLoading","data","x","Date","y","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","datetimeFormatter","month","type","categories","map","price","time_close","fill","gradient","gradientToColors","stops"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical>([\"prices\", coinId], () => fetchCoinHistory(coinId));\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Price...\"\n      ) : (\n        <ApexChart\n          series={[\n            {\n              data: [\n                {\n                  x: new Date(1538778600000),\n                  y: [6629.81, 6650.5, 6623.04, 6633.33],\n                },\n                {\n                  x: new Date(1538780400000),\n                  y: [6632.01, 6643.59, 6620, 6630.11],\n                },\n                {\n                  x: new Date(1538782200000),\n                  y: [6630.71, 6648.95, 6623.34, 6635.65],\n                },\n                {\n                  x: new Date(1538784000000),\n                  y: [6635.65, 6651, 6629.67, 6638.24],\n                },\n                {\n                  x: new Date(1538794800000),\n                  y: [6604.5, 6614.4, 6602.26, 6608.02],\n                },\n                {\n                  x: new Date(1538796600000),\n                  y: [6608.02, 6610.68, 6601.99, 6608.91],\n                },\n                {\n                  x: new Date(1538798400000),\n                  y: [6608.91, 6618.99, 6608.01, 6612],\n                },\n                {\n                  x: new Date(1538800200000),\n                  y: [6612, 6615.13, 6605.09, 6612],\n                },\n                {\n                  x: new Date(1538802000000),\n                  y: [6612, 6624.12, 6608.43, 6622.95],\n                },\n                {\n                  x: new Date(1538803800000),\n                  y: [6623.91, 6623.91, 6615, 6615.67],\n                },\n                {\n                  x: new Date(1538805600000),\n                  y: [6618.69, 6618.74, 6610, 6610.4],\n                },\n                {\n                  x: new Date(1538807400000),\n                  y: [6611, 6622.78, 6610.4, 6614.9],\n                },\n                {\n                  x: new Date(1538809200000),\n                  y: [6614.9, 6626.2, 6613.33, 6623.45],\n                },\n              ],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: {\n                show: false,\n              },\n              axisTicks: {\n                show: false,\n              },\n              labels: { show: false, datetimeFormatter: { month: \"mmm 'yy\" } },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close * 1000) ?? [],\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n          }}\n        ></ApexChart>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}