{"ast":null,"code":"var _jsxFileName = \"/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"prices\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Price...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      series: [{\n        x: new Date(1538778600000),\n        y: [6629.81, 6650.5, 6623.04, 6633.33]\n      }, {\n        x: new Date(1538780400000),\n        y: [6632.01, 6643.59, 6620, 6630.11]\n      }, {\n        x: new Date(1538782200000),\n        y: [6630.71, 6648.95, 6623.34, 6635.65]\n      }, {\n        x: new Date(1538784000000),\n        y: [6635.65, 6651, 6629.67, 6638.24]\n      }, {\n        x: new Date(1538785800000),\n        y: [6638.24, 6640, 6620, 6624.47]\n      }, {\n        x: new Date(1538787600000),\n        y: [6624.53, 6636.03, 6621.68, 6624.31]\n      }, {\n        x: new Date(1538789400000),\n        y: [6624.61, 6632.2, 6617, 6626.02]\n      }, {\n        x: new Date(1538791200000),\n        y: [6627, 6627.62, 6584.22, 6603.02]\n      }, {\n        x: new Date(1538793000000),\n        y: [6605, 6608.03, 6598.95, 6604.01]\n      }, {\n        x: new Date(1538794800000),\n        y: [6604.5, 6614.4, 6602.26, 6608.02]\n      }, {\n        x: new Date(1538796600000),\n        y: [6608.02, 6610.68, 6601.99, 6608.91]\n      }, {\n        x: new Date(1538798400000),\n        y: [6608.91, 6618.99, 6608.01, 6612]\n      }, {\n        x: new Date(1538800200000),\n        y: [6612, 6615.13, 6605.09, 6612]\n      }, {\n        x: new Date(1538802000000),\n        y: [6612, 6624.12, 6608.43, 6622.95]\n      }, {\n        x: new Date(1538803800000),\n        y: [6623.91, 6623.91, 6615, 6615.67]\n      }, {\n        x: new Date(1538805600000),\n        y: [6618.69, 6618.74, 6610, 6610.4]\n      }, {\n        x: new Date(1538807400000),\n        y: [6611, 6622.78, 6610.4, 6614.9]\n      }, {\n        x: new Date(1538809200000),\n        y: [6614.9, 6626.2, 6613.33, 6623.45]\n      }, {\n        x: new Date(1538811000000),\n        y: [6623.48, 6627, 6618.38, 6620.35]\n      }, {\n        x: new Date(1538812800000),\n        y: [6619.43, 6620.35, 6610.05, 6615.53]\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          type: \"candlestick\",\n          height: 350,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 2\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close),\n          labels: {\n            style: {\n              colors: \"#9c88ff\"\n            }\n          }\n        },\n        plotOptions: {\n          candlestick: {\n            colors: {\n              upward: \"#3C90EB\",\n              downward: \"#DF7D46\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Price, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Price;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","Price","coinId","isLoading","data","x","Date","y","theme","mode","chart","type","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","categories","map","price","time_close","labels","style","colors","plotOptions","candlestick","upward","downward"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical>([\"prices\", coinId], () => fetchCoinHistory(coinId));\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Price...\"\n      ) : (\n        <ApexChart\n          series={[\n            {\n              x: new Date(1538778600000),\n              y: [6629.81, 6650.5, 6623.04, 6633.33],\n            },\n            {\n              x: new Date(1538780400000),\n              y: [6632.01, 6643.59, 6620, 6630.11],\n            },\n            {\n              x: new Date(1538782200000),\n              y: [6630.71, 6648.95, 6623.34, 6635.65],\n            },\n            {\n              x: new Date(1538784000000),\n              y: [6635.65, 6651, 6629.67, 6638.24],\n            },\n            {\n              x: new Date(1538785800000),\n              y: [6638.24, 6640, 6620, 6624.47],\n            },\n            {\n              x: new Date(1538787600000),\n              y: [6624.53, 6636.03, 6621.68, 6624.31],\n            },\n            {\n              x: new Date(1538789400000),\n              y: [6624.61, 6632.2, 6617, 6626.02],\n            },\n            {\n              x: new Date(1538791200000),\n              y: [6627, 6627.62, 6584.22, 6603.02],\n            },\n            {\n              x: new Date(1538793000000),\n              y: [6605, 6608.03, 6598.95, 6604.01],\n            },\n            {\n              x: new Date(1538794800000),\n              y: [6604.5, 6614.4, 6602.26, 6608.02],\n            },\n            {\n              x: new Date(1538796600000),\n              y: [6608.02, 6610.68, 6601.99, 6608.91],\n            },\n            {\n              x: new Date(1538798400000),\n              y: [6608.91, 6618.99, 6608.01, 6612],\n            },\n            {\n              x: new Date(1538800200000),\n              y: [6612, 6615.13, 6605.09, 6612],\n            },\n            {\n              x: new Date(1538802000000),\n              y: [6612, 6624.12, 6608.43, 6622.95],\n            },\n            {\n              x: new Date(1538803800000),\n              y: [6623.91, 6623.91, 6615, 6615.67],\n            },\n            {\n              x: new Date(1538805600000),\n              y: [6618.69, 6618.74, 6610, 6610.4],\n            },\n            {\n              x: new Date(1538807400000),\n              y: [6611, 6622.78, 6610.4, 6614.9],\n            },\n            {\n              x: new Date(1538809200000),\n              y: [6614.9, 6626.2, 6613.33, 6623.45],\n            },\n            {\n              x: new Date(1538811000000),\n              y: [6623.48, 6627, 6618.38, 6620.35],\n            },\n            {\n              x: new Date(1538812800000),\n              y: [6619.43, 6620.35, 6610.05, 6615.53],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 2,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n              labels: {\n                style: {\n                  colors: \"#9c88ff\",\n                },\n              },\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#3C90EB\",\n                  downward: \"#DF7D46\",\n                },\n              },\n            },\n          }}\n        ></ApexChart>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}