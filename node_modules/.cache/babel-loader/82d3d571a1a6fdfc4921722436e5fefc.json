{"ast":null,"code":"var _jsxFileName = \"/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"prices\", coinId], () => fetchCoinHistory(coinId));\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Price...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      series: [{\n        data: data === null || data === void 0 ? void 0 : data.map(price => {\n          return [Date.parse(price.time_close), price.open, price.high, price.low, price.close];\n        })\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          type: \"candlestick\",\n          height: 350,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 2\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close),\n          labels: {\n            style: {\n              colors: \"#9c88ff\"\n            }\n          }\n        },\n        plotOptions: {\n          candlestick: {\n            colors: {\n              upward: \"#3C90EB\",\n              downward: \"#DF7D46\"\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Price, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Price;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","Price","coinId","isLoading","data","console","log","map","price","Date","parse","time_close","open","high","low","close","theme","mode","chart","type","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","categories","labels","style","colors","plotOptions","candlestick","upward","downward"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical>([\"prices\", coinId], () => fetchCoinHistory(coinId));\n\n  console.log(data);\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Price...\"\n      ) : (\n        <ApexChart\n          series={[\n            {\n              data: data?.map((price) => {\n                return [Date.parse(price.time_close), price.open, price.high, price.low, price.close];\n              }),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 2,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n              labels: {\n                style: {\n                  colors: \"#9c88ff\",\n                },\n              },\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#3C90EB\",\n                  downward: \"#DF7D46\",\n                },\n              },\n            },\n          }}\n        ></ApexChart>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAiBA,SAASC,KAAT,OAAuC;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACrC,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAsBN,QAAQ,CAAc,CAAC,QAAD,EAAWI,MAAX,CAAd,EAAkC,MAAMH,gBAAgB,CAACG,MAAD,CAAxD,CAApC;EAEAG,OAAO,CAACC,GAAR,CAAYF,IAAZ;EAEA,oBACE;IAAA,UACGD,SAAS,GACR,kBADQ,gBAGR,QAAC,SAAD;MACE,MAAM,EAAE,CACN;QACEC,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG,GAAN,CAAWC,KAAD,IAAW;UACzB,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACG,UAAjB,CAAD,EAA+BH,KAAK,CAACI,IAArC,EAA2CJ,KAAK,CAACK,IAAjD,EAAuDL,KAAK,CAACM,GAA7D,EAAkEN,KAAK,CAACO,KAAxE,CAAP;QACD,CAFK;MADR,CADM,CADV;MAQE,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,IAAI,EAAE;QADD,CADA;QAIPC,KAAK,EAAE;UACLC,IAAI,EAAE,aADD;UAELC,MAAM,EAAE,GAFH;UAGLC,KAAK,EAAE,GAHF;UAILC,OAAO,EAAE;YACPC,IAAI,EAAE;UADC,CAJJ;UAOLC,UAAU,EAAE;QAPP,CAJA;QAaPC,MAAM,EAAE;UACNC,KAAK,EAAE,QADD;UAENL,KAAK,EAAE;QAFD,CAbD;QAiBPM,KAAK,EAAE;UACLJ,IAAI,EAAE;QADD,CAjBA;QAoBPK,KAAK,EAAE;UACLT,IAAI,EAAE,UADD;UAELU,UAAU,EAAEzB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG,GAAN,CAAWC,KAAD,IAAWA,KAAK,CAACG,UAA3B,CAFP;UAGLmB,MAAM,EAAE;YACNC,KAAK,EAAE;cACLC,MAAM,EAAE;YADH;UADD;QAHH,CApBA;QA6BPC,WAAW,EAAE;UACXC,WAAW,EAAE;YACXF,MAAM,EAAE;cACNG,MAAM,EAAE,SADF;cAENC,QAAQ,EAAE;YAFJ;UADG;QADF;MA7BN;IARX;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AAuDD;;GA5DQnC,K;UACqBH,Q;;;KADrBG,K;AA8DT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}