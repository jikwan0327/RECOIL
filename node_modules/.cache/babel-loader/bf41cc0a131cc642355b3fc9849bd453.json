{"ast":null,"code":"var _jsxFileName = \"/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Price...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      type: \"candlestick\",\n      series: [{\n        data: [{\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        }, {\n          x: new Date(1538780400000),\n          y: [6632.01, 6643.59, 6620, 6630.11]\n        }, {\n          x: new Date(1538782200000),\n          y: [6630.71, 6648.95, 6623.34, 6635.65]\n        }, {\n          x: new Date(1538784000000),\n          y: [6635.65, 6651, 6629.67, 6638.24]\n        }, {\n          x: new Date(1538785800000),\n          y: [6638.24, 6640, 6620, 6624.47]\n        }, {\n          x: new Date(1538787600000),\n          y: [6624.53, 6636.03, 6621.68, 6624.31]\n        }, {\n          x: new Date(1538789400000),\n          y: [6624.61, 6632.2, 6617, 6626.02]\n        }, {\n          x: new Date(1538791200000),\n          y: [6627, 6627.62, 6584.22, 6603.02]\n        }, {\n          x: new Date(1538793000000),\n          y: [6605, 6608.03, 6598.95, 6604.01]\n        }]\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false,\n            datetimeFormatter: {\n              month: \"mmm 'yy\"\n            }\n          },\n          type: \"datetime\"\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"#0be881\"],\n            stops: [0, 100]\n          }\n        },\n        colors: [\"#0fbcf9\"],\n        tooltip: {\n          y: {\n            formatter: value => `$${value.toFixed(3)}`\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Price, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Price;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","Price","coinId","isLoading","data","x","Date","y","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","datetimeFormatter","month","type","fill","gradient","gradientToColors","stops","colors","tooltip","formatter","value","toFixed"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Price...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: [\n                {\n                  x: new Date(1538778600000),\n                  y: [6629.81, 6650.5, 6623.04, 6633.33],\n                },\n                {\n                  x: new Date(1538780400000),\n                  y: [6632.01, 6643.59, 6620, 6630.11],\n                },\n                {\n                  x: new Date(1538782200000),\n                  y: [6630.71, 6648.95, 6623.34, 6635.65],\n                },\n                {\n                  x: new Date(1538784000000),\n                  y: [6635.65, 6651, 6629.67, 6638.24],\n                },\n                {\n                  x: new Date(1538785800000),\n                  y: [6638.24, 6640, 6620, 6624.47],\n                },\n                {\n                  x: new Date(1538787600000),\n                  y: [6624.53, 6636.03, 6621.68, 6624.31],\n                },\n                {\n                  x: new Date(1538789400000),\n                  y: [6624.61, 6632.2, 6617, 6626.02],\n                },\n                {\n                  x: new Date(1538791200000),\n                  y: [6627, 6627.62, 6584.22, 6603.02],\n                },\n                {\n                  x: new Date(1538793000000),\n                  y: [6605, 6608.03, 6598.95, 6604.01],\n                },\n              ],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: {\n                show: false,\n              },\n              axisTicks: {\n                show: false,\n              },\n              labels: { show: false, datetimeFormatter: { month: \"mmm 'yy\" } },\n              type: \"datetime\",\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(3)}`,\n              },\n            },\n          }}\n        ></ApexChart>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}