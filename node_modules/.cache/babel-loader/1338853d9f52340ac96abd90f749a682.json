{"ast":null,"code":"import { atom, selector } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\nconst {\n  persistAtom\n} = recoilPersist({\n  key: \"recoil-persist\",\n  storage: localStorage\n});\nexport let Categories;\n\n(function (Categories) {\n  Categories[\"TO_DO\"] = \"TO_DO\";\n  Categories[\"DOING\"] = \"DOING\";\n  Categories[\"DONE\"] = \"DONE\";\n})(Categories || (Categories = {}));\n\nexport const categoryState = atom({\n  key: \"category\",\n  default: Categories.TO_DO\n});\nexport const toDoState = atom({\n  key: \"toDo\",\n  default: [],\n  effects_UNSTABLE: [persistAtom]\n});\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category);\n  }\n});","map":{"version":3,"names":["atom","selector","recoilPersist","persistAtom","key","storage","localStorage","Categories","categoryState","default","TO_DO","toDoState","effects_UNSTABLE","toDoSelector","get","toDos","category","filter","toDo"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/Nomadcoder/react-masterClass/Todo/src/components/atoms.tsx"],"sourcesContent":["import { atom, selector } from \"recoil\";\nimport { recoilPersist } from \"recoil-persist\";\n\nconst { persistAtom } = recoilPersist({\n  key: \"recoil-persist\",\n  storage: localStorage,\n});\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\",\n}\n\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: Categories;\n}\n\nexport const categoryState = atom<Categories>({\n  key: \"category\",\n  default: Categories.TO_DO,\n});\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: [],\n  effects_UNSTABLE: [persistAtom],\n});\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter((toDo) => toDo.category === category);\n  },\n});\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,MAAM;EAAEC;AAAF,IAAkBD,aAAa,CAAC;EACpCE,GAAG,EAAE,gBAD+B;EAEpCC,OAAO,EAAEC;AAF2B,CAAD,CAArC;AAKA,WAAYC,UAAZ;;WAAYA,U;EAAAA,U;EAAAA,U;EAAAA,U;GAAAA,U,KAAAA,U;;AAYZ,OAAO,MAAMC,aAAa,GAAGR,IAAI,CAAa;EAC5CI,GAAG,EAAE,UADuC;EAE5CK,OAAO,EAAEF,UAAU,CAACG;AAFwB,CAAb,CAA1B;AAKP,OAAO,MAAMC,SAAS,GAAGX,IAAI,CAAU;EACrCI,GAAG,EAAE,MADgC;EAErCK,OAAO,EAAE,EAF4B;EAGrCG,gBAAgB,EAAE,CAACT,WAAD;AAHmB,CAAV,CAAtB;AAMP,OAAO,MAAMU,YAAY,GAAGZ,QAAQ,CAAC;EACnCG,GAAG,EAAE,cAD8B;EAEnCU,GAAG,EAAE,QAAa;IAAA,IAAZ;MAAEA;IAAF,CAAY;IAChB,MAAMC,KAAK,GAAGD,GAAG,CAACH,SAAD,CAAjB;IACA,MAAMK,QAAQ,GAAGF,GAAG,CAACN,aAAD,CAApB;IACA,OAAOO,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,QAAL,KAAkBA,QAAzC,CAAP;EACD;AANkC,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}