{"ast":null,"code":"import _objectSpread from\"/Users/DSM20221/jikwan/github/TIL/memo/Nomadcoder/react-masterClass/Todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/DSM20221/jikwan/github/TIL/memo/Nomadcoder/react-masterClass/Todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{useForm}from\"react-hook-form\";import{useRecoilValue,useSetRecoilState}from\"recoil\";import{categoryState,toDoState}from\"./atoms\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateToDO(){var setToDos=useSetRecoilState(toDoState);var category=useRecoilValue(categoryState);var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,setValue=_useForm.setValue;var handleValid=function handleValid(_ref){var toDo=_ref.toDo;setToDos(function(oldToDos){return[{text:toDo,category:category,id:Date.now()}].concat(_toConsumableArray(oldToDos));});setValue(\"toDo\",\"\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(handleValid),children:[/*#__PURE__*/_jsx(\"input\",_objectSpread(_objectSpread({},register(\"toDo\",{required:\"need require\"})),{},{placeholder:\"email\"})),/*#__PURE__*/_jsx(\"button\",{children:\"Add\"})]});}export default CreateToDO;","map":{"version":3,"names":["useForm","useRecoilValue","useSetRecoilState","categoryState","toDoState","CreateToDO","setToDos","category","register","handleSubmit","setValue","handleValid","toDo","oldToDos","text","id","Date","now","required"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/Nomadcoder/react-masterClass/Todo/src/components/CreateToDo.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { categoryState, toDoState } from \"./atoms\";\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDO() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const handleValid = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => [{ text: toDo, category, id: Date.now() }, ...oldToDos]);\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit(handleValid)}>\n      <input {...register(\"toDo\", { required: \"need require\" })} placeholder=\"email\" />\n      <button>Add</button>\n    </form>\n  );\n}\n\nexport default CreateToDO;\n"],"mappings":"mUACA,OAASA,OAAT,KAAwB,iBAAxB,CACA,OAASC,cAAT,CAAyBC,iBAAzB,KAAkD,QAAlD,CACA,OAASC,aAAT,CAAwBC,SAAxB,KAAyC,SAAzC,C,wFAMA,QAASC,WAAT,EAAsB,CACpB,GAAMC,SAAQ,CAAGJ,iBAAiB,CAACE,SAAD,CAAlC,CACA,GAAMG,SAAQ,CAAGN,cAAc,CAACE,aAAD,CAA/B,CACA,aAA6CH,OAAO,EAApD,CAAQQ,QAAR,UAAQA,QAAR,CAAkBC,YAAlB,UAAkBA,YAAlB,CAAgCC,QAAhC,UAAgCA,QAAhC,CACA,GAAMC,YAAW,CAAG,QAAdA,YAAc,MAAqB,IAAlBC,KAAkB,MAAlBA,IAAkB,CACvCN,QAAQ,CAAC,SAACO,QAAD,SAAe,CAAEC,IAAI,CAAEF,IAAR,CAAcL,QAAQ,CAARA,QAAd,CAAwBQ,EAAE,CAAEC,IAAI,CAACC,GAAL,EAA5B,CAAf,4BAA4DJ,QAA5D,IAAD,CAAR,CACAH,QAAQ,CAAC,MAAD,CAAS,EAAT,CAAR,CACD,CAHD,CAKA,mBACE,cAAM,QAAQ,CAAED,YAAY,CAACE,WAAD,CAA5B,wBACE,4CAAWH,QAAQ,CAAC,MAAD,CAAS,CAAEU,QAAQ,CAAE,cAAZ,CAAT,CAAnB,MAA2D,WAAW,CAAC,OAAvE,GADF,cAEE,+BAFF,GADF,CAMD,CAED,cAAeb,WAAf"},"metadata":{},"sourceType":"module"}