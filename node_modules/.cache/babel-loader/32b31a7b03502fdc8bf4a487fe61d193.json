{"ast":null,"code":"var _jsxFileName = \"/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"prices\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Price...\" : /*#__PURE__*/_jsxDEV(ApexChart, {\n      series: [{\n        data: [{\n          x: new Date(1538778600000),\n          y: [6629.81, 6650.5, 6623.04, 6633.33]\n        }]\n      }],\n      options: {\n        chart: {\n          type: \"candlestick\",\n          height: 350\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Price, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Price;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","ApexChart","Price","coinId","isLoading","data","x","Date","y","chart","type","height"],"sources":["/Users/DSM20221/jikwan/github/TIL/memo/react-masterclass/src/routes/Price.tsx"],"sourcesContent":["import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface PriceProps {\n  coinId: string;\n}\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical>([\"prices\", coinId], () => fetchCoinHistory(coinId));\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Price...\"\n      ) : (\n        <ApexChart\n          series={[\n            {\n              data: [\n                {\n                  x: new Date(1538778600000),\n                  y: [6629.81, 6650.5, 6623.04, 6633.33],\n                },\n              ],\n            },\n          ]}\n          options={{\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n            },\n          }}\n        ></ApexChart>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAiBA,SAASC,KAAT,OAAuC;EAAA;;EAAA,IAAxB;IAAEC;EAAF,CAAwB;EACrC,MAAM;IAAEC,SAAF;IAAaC;EAAb,IAAsBN,QAAQ,CAAc,CAAC,QAAD,EAAWI,MAAX,CAAd,EAAkC,MAAMH,gBAAgB,CAACG,MAAD,CAAxD,CAApC;EAEA,oBACE;IAAA,UACGC,SAAS,GACR,kBADQ,gBAGR,QAAC,SAAD;MACE,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,CACJ;UACEC,CAAC,EAAE,IAAIC,IAAJ,CAAS,aAAT,CADL;UAEEC,CAAC,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,OAAlB,EAA2B,OAA3B;QAFL,CADI;MADR,CADM,CADV;MAWE,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,IAAI,EAAE,aADD;UAELC,MAAM,EAAE;QAFH;MADA;IAXX;MAAA;MAAA;MAAA;IAAA;EAJJ;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;GA7BQT,K;UACqBH,Q;;;KADrBG,K;AA+BT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}